# BUILD redisfab/onnxruntime-${ARCH}-${OSNICK}:$(ONNXRUNTIME_VER)

# stretch|bionic|buster
ARG OSNICK=buster

# arm32v7|arm64v8
ARG ARCH=arm64v8

#----------------------------------------------------------------------------------------------
FROM redisfab/${ARCH}-xbuild:${OSNICK} as builder

ARG ONNXRUNTIME_REPO=https://github.com/Microsoft/onnxruntime
ARG ONNXRUNTIME_BRANCH=rel-0.4.0
ARG ONNXRUNTIME_VER=0.4.0
ARG ARCH_FLAG="--arm64"

RUN [ "cross-build-start" ]

RUN apt-get -qq update
RUN apt-get -qq install -y curl wget tar git patch
RUN apt-get -qq install -y build-essential cmake
RUN apt-get -qq install -y libcurl4-openssl-dev libssl-dev libatlas-base-dev zlib1g-dev

RUN apt-get -qq install -y python3 python3-pip python3-dev
RUN pip3 install --upgrade pip setuptools wheel
RUN pip3 install numpy

WORKDIR /build

ADD ./*.patch /build/
ADD ./pack.sh /build/

# RUN set -e ;\
# 	wget -q https://github.com/Kitware/CMake/releases/download/v3.14.3/cmake-3.14.3.tar.gz ;\
# 	tar zxf cmake-3.14.3.tar.gz ;\
# 	cd cmake-3.14.3 ;\
# 	./configure --system-curl ;\
# 	make -j $(nproc);\
# 	make install

ARG BUILDTYPE=MinSizeRel
ARG BUILDARGS="--config ${BUILDTYPE} ${ARM_FLAG} --parallel"

RUN set -e ;\
	git clone --single-branch --branch ${ONNXRUNTIME_BRANCH} --recursive ${ONNXRUNTIME_REPO} onnxruntime ;\
	cd onnxruntime ;\
	git checkout "rel-${ONNXRUNTIME_VER}"

RUN set -e ;\
	cd onnxruntime ;\
	patch -p1 -i ../werrror.patch

RUN set -e ;\
	cd onnxruntime ;\
	./build.sh ${BUILDARGS} --update --build ;\
	./build.sh ${BUILDARGS} --build_shared_lib
# RUN ./build.sh ${BUILDARGS} --enable_pybind --build_wheel

RUN ./pack.sh ${ONNXRUNTIME_VER}

RUN [ "cross-build-end" ]
